---
import { ClientRouter } from "astro:transitions"
import { Icon } from "astro-icon/components"

const profileId = "profile"
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>Chess baby</title>
    <ClientRouter />
  </head>
  <body class="dark:bg-gray-900 dark:text-gray-50">
    <div class="relative flex flex-col flex-nowrap">
      <header transition:persist="header">
        <nav id="separator-sidebar" class="" aria-label="Sidebar">
          <ul class="font-medium flex mx-2 mt-2">
            <h4 class="text-muted-foreground mb-1 ml-3 text-xs font-light">Legal</h4>
            <hr class="mt-5 border-none" />
            <h4 class="text-muted-foreground mb-1 ml-3 text-xs font-light">Legal</h4>
            <space class="grow"></space>
            <h4
              id={profileId}
              class="text-muted-foreground mb-1 ml-3 text-xs font-light justify-self-end"
            >
              <Icon name="svg-spinners:3-dots-fade" />
            </h4>
          </ul>
        </nav>
      </header>

      <div class="hidden w-64 sm:block" transition:persist="header-blocker"></div>

      <h1>Corner Chess</h1>

      <main class="flex min-h-screen flex-1 flex-col items-center">
        <slot />
      </main>
    </div>
  </body>
</html>

<style>
  html,
  body {
    margin: 0;
    width: 100%;
    height: 100%;
  }
</style>

<script>
  type GoogleUserInfo = {
    sub: string
    name: string
    givenName: string
    familyName: string
    picture: string
    email: string
    emailVerified: boolean
    locale: string
  }

  const profileId = "profile"
  document.addEventListener("DOMContentLoaded", () => {
    const decodedCookie = decodeURIComponent(document.cookie)
    const profile = document.getElementById(profileId)
    if (!profile) {
      throw new Error()
    }

    const userLookup = /(?:^|\s|;)user=([A-Za-z0-9+\/=]*)/gm
    const matches = decodedCookie.matchAll(userLookup)
    let endIndex: number | undefined = decodedCookie.indexOf(" ", startIndex + userLookup.length)
    if (endIndex === -1) endIndex = undefined
    profile.innerText = decodedCookie
  })
</script>
