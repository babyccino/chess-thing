---
import { ClientRouter } from "astro:transitions"
import { Icon } from "astro-icon/components"

const profileId = "profile"
const iconId = "icon"
const loginId = "login"
const loginUrl = "http://localhost:3000/api/auth/login"
const indexUrl = "http://localhost:3000"
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>Chess baby</title>
    <ClientRouter />
  </head>
  <body class="dark:bg-gray-950 dark:text-gray-50">
    <div class="relative flex flex-col flex-nowrap">
      <header transition:persist="header">
        <nav id="separator-sidebar" class="p-2 px-4 flex items-center" aria-label="Sidebar">
          <h1>Corner Chess</h1>

          <ul class="font-medium ml-2 grow flex items-center">
            <a
              href={indexUrl}
              class="text-muted-foreground ml-3 px-2 py-1 text-xs font-light rounded-md hover:bg-white/10 transition-colors"
            >
              Lobby
            </a>
            <div class="grow"></div>
            <div class="text-muted-foreground ml-3 text-xs font-light justify-self-end">
              <Icon id={iconId} name="svg-spinners:3-dots-fade" />
              <h4 id={profileId} class="hidden"></h4>
              <a id={loginId} class="hidden" href={loginUrl}>Login</a>
            </div>
          </ul>
        </nav>
      </header>

      <div class="hidden w-64 sm:block" transition:persist="header-blocker"></div>

      <main class="flex min-h-screen flex-1 flex-col items-center">
        <slot />
      </main>
    </div>
  </body>
</html>

<style>
  html,
  body {
    margin: 0;
    width: 100%;
    height: 100%;
  }
</style>

<script>
  type GoogleUserInfo = {
    sub: string
    name: string
    givenName: string
    familyName: string
    picture: string
    email: string
    emailVerified: boolean
    locale: string
  }

  const profileId = "profile"
  const iconId = "icon"
  const loginId = "login"

  function getUser(): GoogleUserInfo | null {
    const decodedCookie = decodeURIComponent(document.cookie)

    const userLookup = /(?:^|\s|;)user=([A-Za-z0-9+\/=]*)/gm
    const matches = decodedCookie.matchAll(userLookup)

    for (const match of matches) {
      try {
        const user = JSON.parse(atob(match[1]))
        if (user.name == undefined) return null
        return user
      } catch (error) {
        console.error(error)
        return null
      }
    }

    return null
  }

  document.addEventListener("DOMContentLoaded", () => {
    const profile = document.getElementById(profileId)
    const icon = document.getElementById(iconId)
    const login = document.getElementById(loginId)
    if (!profile || !icon || !login) {
      throw new Error()
    }

    const user = getUser()
    icon.classList.add("hidden")

    if (user === null) {
      login.classList.remove("hidden")
      return
    }

    profile.classList.remove("hidden")
    profile.innerText = user.name
  })
</script>
